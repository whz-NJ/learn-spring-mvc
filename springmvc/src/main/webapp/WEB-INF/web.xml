<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  <!--设置根上下文配置文件位置-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>

  <!--注册ContextLoaderListener 容器初始化监听器-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--
  理解applicationContext.xml和dispatcher-servlet.xml的区别
applicationContext.xml：与dispatcher-servlet.xml形成父子关系，在该文件中写所有servlet共用的配置
dispatcher-servlet.xml：这是一个对应servlet的配置文件，在该文件中写本servlet的配置。
  -->
  <!--注册DispatcherServlet-->
  <!--DispatcherServlet会根据Servlet的名字找到一个文件，并基于该文件加载应用上下文。 此处的Servlet的名字为dispatcher，
  因此DispatcherServlet会从"/WEB-INF/dispatcher-context.xml"文件中加载其应用上下文-->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
    <init-param>
      <!--配置dispatcher.xml作为mvc的配置文件-->
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:dispatcher-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
   <!-- <async-supported>true</async-supported>-->
  </servlet>

  <!--将DispatcherServlet映射到"/"-->
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
