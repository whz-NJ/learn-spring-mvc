四.文件上传
1. 基于apache 的commons-fileupload.jar 完成文件上传.
2. MultipartResovler 作用:
2.1 把客户端上传的文件流转换成MutipartFile 封装类.
2.2 通过MutipartFile 封装类获取到文件流
3. 表单数据类型分类
3.1 在<form>的enctype 属性控制表单类型
3.2 默认值application/x-www-form-urlencoded,普通表单数据.(少量文字信息)
3.3 text/plain 大文字量时使用的类型.邮件,论文（form表单的method属性为post，则上传最大大小为2GB）
3.4 multipart/form-data 表单中包含二进制文件内容.
4. 实现步骤:
4.1 导入springmvc 包和apache 文件上传commons-fileupload 和
commons-io 两个jar
4.2 编写JSP 页面

参考spring-framework-reference-4.2.4.RELEASE.pdf 文档的 Using a MultipartResolver with Commons FileUpload 节，
在springmvc.xml里配置MultipartResovler解析器：
	<!-- MultipartResovler解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="50"></property>
	</bean>
	<!-- 异常解析器 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error.jsp</prop>
			</props>
		</property>
	</bean>
CommonsMultipartResolver 将客户端上传的二进制文件流转换为 HandlerMethod的 MultipartFile 类型入参，入参名必须和jsp里
type为file的input元素的name属性相同。
CommonsMultipartResolver 有三个可定制属性："maxUploadSize", "maxInMemorySize" and "defaultEncoding"
<!--文件上传必须使用POST -->
<!-- POST 最大2GB,GET最大2KB,POST上传字节流,GET上传字符流-->
