将主页面main.jsp挪到 WebContent/WEB-INF/page 子目录下，这样用户就无法直接访问到这里的页面，需要通过控制器跳转，
这样通过SpringMVC的Interceptor就可以控制，检查用户登录状态，如果没有登录，就不允许用户访问main.jsp，而是重定向到login.jsp。
如果把main.jsp放在 WebContent 根目录下，main.jsp的访问无法被SpringMVC拦截。

使用springmvc拦截器实现登陆验证
1. 把页面放入到web-inf中.
	1.1 放入到web-inf中后必须通过控制器转发到页面.
	1.2 因为springmvc拦截器拦截的是控制器,不能拦截jsp的访问
2. 通过拦截器拦截全部控制器,需要在拦截器内部放行login控制器

SpringMVC原理：
如果在web.xml 中设置DispatcherServlet 的<url-pattern>为/时,当用户发起请求, 请求一个控制器, 首先会执行DispatcherServlet. 由
DispatcherServlet 调用HandlerMapping 的 DefaultAnnotationHandlerMapping（注解方式配置SpringMVC时）解析URL, 解析后调用
HandlerAdatper 组件的 AnnotationMethodHandlerAdapter 调用 Controller 中的HandlerMethod.当HandlerMethod 执行完成后会返回
View,会被ViewResovler 进行视图解析（如果view名没有forward:/redirect:前缀，如果有，则走系统默认视图解析器，它不会加任何前缀或后缀。
forward:前缀，浏览器网址不变，会，如果有 redirect: 前缀，则后面跟的是全路径，直接调用全路径的jsp文件）,解析后调用jsp 对应的.class 文件并运行,最终把运行.class 文件的结果响应给客户端.
